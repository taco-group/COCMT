name: cmt_camera_late_fusion_resnet50
root_dir: "/media/re/2384a6b4-4dae-400d-ad72-9b7044491b55/cov2v/OPV2VDATA/few_shot/train"
validate_dir: "/media/re/2384a6b4-4dae-400d-ad72-9b7044491b55/cov2v/OPV2VDATA/few_shot/validate"
test_dir: "/media/re/2384a6b4-4dae-400d-ad72-9b7044491b55/cov2v/OPV2VDATA/few_shot/validate"

yaml_parser: ["load_point_cloud_params", "load_mmcv_param"]
mmcv_file_path_ptr: ["model.args.CMT_C.mmcv_file_path"]
train_params:
  batch_size: &batch_size 1
  epoches: &epoches 151
  eval_freq: 5
  save_freq: 1
  max_cav: &max_cav 5
  num_classes: &num_classes 2

comm_range: 70
input_source: ['camera']
label_type: 'camera'
cav_lidar_range: &cav_lidar [-51.2, -51.2, -3, 51.2, 51.2, 1]

add_data_extension: ['bev_visibility.png']

heter:
  assignment_path: "/media/re/2384a6b4-4dae-400d-ad72-9b7044491b55/RightChoice/COCMT/opencood/modality_assign/opv2v_4modality.json"
  ego_modality: &ego_modality "m2"
  mapping_dict:
    m1: m2
    m2: m2
    m3: m2
    m4: m2
  modality_setting:
    m2:
      sensor_type: &sensor_type_m2 'camera'

      data_aug_conf: &data_aug_conf_m2
        resize_lim: &resize_ratio [0.64, 0.64]
        final_dim: &image_shape [384, 512]
        rot_lim: [0.0, 0.0]
        H: 600
        W: 800
        rand_flip: False
        bot_pct_lim: [0.0, 0.0]
        cams: ['camera0', 'camera1', 'camera2', 'camera3']
        Ncams: 4

fusion:
  core_method: 'lateheter'
  dataset: 'opv2v'
  args:
    proj_first: false
    grid_conf: None # place-holder
    data_aug_conf: None # place-holder

preprocess:
  # options: BasePreprocessor, VoxelPreprocessor, BevPreprocessor
  core_method: 'SpVoxelPreprocessor'
  args:
    voxel_size: [0.4, 0.4, 4] # useful
    max_points_per_voxel: 1 # useless
    max_voxel_train: 1 # useless
    max_voxel_test: 1 # useless
  # lidar range for each individual cav.
  cav_lidar_range: *cav_lidar

# anchor box related
postprocess:
  core_method: 'CMT_VoxelPostprocessor' # VoxelPostprocessor, BevPostprocessor supported
  anchor_free: True
  gt_range: *cav_lidar
  anchor_args:
    cav_lidar_range: *cav_lidar
  target_args:
    score_threshold: 0.20
  order: 'lwh' # hwl or lwh ### align the bbox order to nuscenes
  max_num: 120 # maximum number of objects in a single frame. use this number to make sure different frames has the same dimension in the same batch
  nms_thresh: 0.15

model:
  core_method: 'cmt_camera'
  args:
    max_cav: *max_cav
    pc_range: *cav_lidar

    CMT_C:
      mmcv_file_path: "./cmt_camera_resnet50.py"# relative to current yaml file
      img_shape: *image_shape
      resize_ratio: *resize_ratio

    Camera_SeperateHead:
      type: 'SeparateTaskHeadandBBoxCoder'
      num_cls: *num_classes
      init_bias: -2.19
      final_kernel: 1
      in_channels: 256
      groups: 6
      common_heads:
        center: [ 2, 2 ]
        height: [ 1, 2 ]
        dim: [ 3, 2 ]
        rot: [ 2, 2 ]
      bbox_coder:
        type: 'MultiTaskBBoxCoder'
        post_center_range: *cav_lidar
        pc_range: *cav_lidar
        max_num: 300
        voxel_size: voxel_size
        num_classes: *num_classes
        use_sigmoid: False

loss:
  core_method: cmt_loss
  args:
    loss_cls:
      bg_cls_weight: 0.1
      type: 'CrossEntropyLoss'
      use_sigmoid: False
      loss_weight: 2.0
      class_weight: 1.0
    loss_bbox:
      type: "L1Loss"
      reduction: "mean"
      loss_weight: 0.25
    tasks:
      num_class: 1
      class_names: ['car']
    assigner:
      type: 'HungarianAssigner3D'
      cls_cost:
        type: 'ClassificationCost'
        weight: 2.0
      reg_cost:
        type: 'BBox3DL1Cost'
        weight: 0.25
      iou_cost:
        type: 'IoUCost'
        weight: 0.0 # Fake cost. This is just to make it compatible with DETR head.
      pc_range: *cav_lidar
      code_weights: [2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
    pc_range: *cav_lidar
    code_weights: [2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]

optimizer:
  core_method: AdamW
  lr: 2e-4
  args:
    eps: 1e-10
    weight_decay: 1e-2

lr_scheduler:
    core_method: cosineannealwarm #step, multistep, Exponential and cosineannealwarm support
    epoches: *epoches
    warmup_lr: 2e-5
    warmup_epoches: 10
    lr_min: 5e-6